@model TOSS_UPGRADE.Models.FM_GeneralReference.FM_GeneralReference_IRA
@{
    DB_TOSSEntities SISDB = new DB_TOSSEntities();
}
@using TOSS_UPGRADE.Models;


@using (Ajax.BeginForm("AddInternalRevenueAllotmentTable", "FileMaintenanceGeneralReference", new AjaxOptions { OnSuccess = "AngularGlobalAlertsCallingNoModalNoSuccessWithDoubleFunc('FMGeneralReferenceController','Get_InternalRevenueAllotmentTable','SuccessSaveira')", OnFailure = "OnFailure()", }))
{

<div class="row">

    <div class="col-md-3 form-group">
        <label>IRA Percentage Share</label>
        @Html.TextBoxFor(m => m.getIRAcolumns.IRAPercentageShare, new { @class = "form-control", type = "text", id = "tb1", onkeyup ="AddComma(this) + calc(this)" })
    </div>
    <div class="col-md-2 form-group">
        <label>%</label>
        @Html.TextBoxFor(m => m.getIRAcolumns.IRAPercent, new { @class = "form-control", type = "text", id = "update"})

    </div>

    <div class="col-md-2 form-group">
        <label>Base</label>
        @Html.TextBoxFor(m => m.getIRAcolumns.IRABase, new { @class = "form-control", type = "text", id = "base1" })
    </div>
    <div class="col-md-1"></div>
    <div class="col-md-2">
        <label style="visibility:hidden">%</label>
        <button type="submit" class="btn form-control black bg-addbutton"><b>Save</b></button>
    </div>
    <div class="col-md-2">
        <label style="visibility:hidden">%</label>
        <button type="button" class="btn form-control black bg-headerbc"><b>Cancel</b></button>
    </div>

    <input type="text" class="hidden" id="total" name="total" value="0" />
    <input type="hidden" value="100" id="tb2" name="tb2" onkeyup="calc(this)" />
</div>

}
<script>
    $(function () {
        LoadDataTable();
        LoadPopOver();
        $('#update').attr('disabled', 'disabled');
    
    })

    var x = 0;
    var y = 0;
    var z = 0;
    function calc(obj) {
        var e = obj.id.toString();
        if (e == 'tb1') {
            x = Number(obj.value);
            y = Number(document.getElementById('tb2').value);
        } else {
            x = Number(document.getElementById('tb1').value);
            y = Number(obj.value);
        }
        z = x * y;
        document.getElementById('total').value = z;
        $("#update").val(z + "%");

    }
    function AddComma(text) {
        switch (text.value.length) {
            case 1:
                document.getElementById("tb1").value = "0.0" + text.value;
                break;
            default:
                var data = text.value.replace(".", "");
                var first = data.substring(1, (data.length - 2));
                var second = data.substring(data.length - 2);
                var temp = Math.abs(first) + "." + second;
                document.getElementById("tb1").value = temp;
        }
    }
    function addZeroes(num) {
        var num = Number(num);
        if (String(num).split(".").length < 2 || String(num).split(".")[1].length <= 2) {
            num = num.toFixed(2);
        }
        return num;
    }

    $('#base1').blur(function () {
        //just for testing
        var thisVal = $(this).val();
        thisVal = addZeroes(thisVal);
        $(this).val(thisVal);
    });
</script>